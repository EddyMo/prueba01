rm(list = ls())
library(dplyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(scorecard)
library(ROCR)
library(Metrics)
library(hmeasure)
library(woeBinning)
setwd('D://BGA//Score interno Tarjetas')
options(scipen=999)
#### Carga de datos ####
data <- read.csv("TarjetaVistaMinable_36meses90dias_Iteracion_4.csv", sep = ";", dec = ".", stringsAsFactors = FALSE)
colFactor <- c("ESTADO_CIVIL","NIVEL_EDUCACION","CARGO","TIPO_VIVIENDA","GENERO","SECTOR_ECONOMICO","COD_PROFESION","DEPARTAMENTO","NIVEL_INGRESO","FORMA_PAGO","DEFAULT")
data <- data %>% mutate( NIVEL_INGRESO = ifelse( NIVEL_INGRESO == "", "NO INDICADO", NIVEL_INGRESO  ) )
data[colFactor] <- lapply(data[colFactor], factor)
# data %>% select( NIVEL_INGRESO ) %>% distinct()
# str(data) # nrow(data)
#### DivisiÃ³n del conjunto de datos en Train y Test ####
# ParÃ¡metros
target <- "DEFAULT"
clasePositiva <- 1
numBalanceNegPos <- 4 # 4
proporcionTrainTest <- 0.83 # 0.8 0.83
set.seed(1234) # 1234  3456
trainIndex <- createDataPartition(data[,c(target)], p = proporcionTrainTest, list = FALSE, times = 1)
ds_Test  <- data[-trainIndex,]
ds_Train_NoBalanceado <- data[trainIndex,]
# ds_Test %>% group_by( DEFAULT ) %>% summarise( n() )
# ds_Train_NoBalanceado %>% group_by( DEFAULT ) %>% summarise( n() )
# nrow(ds_Test)
#### Equilibrio de clases en datos de entrenamiento ####
ds_Train_NoBalanceado_Clase0 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 0,]
ds_Train_NoBalanceado_Clase1 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 1,]
numClase0 <- nrow(ds_Train_NoBalanceado_Clase0)
numClase1 <- nrow(ds_Train_NoBalanceado_Clase1)
set.seed(3456)
indexMuestraClase0 <- sample(numClase0, ifelse(numClase1*numBalanceNegPos < numClase0, numClase1*numBalanceNegPos , numClase0 ) )
ds_Train_NoBalanceado_Clase0_bal <- ds_Train_NoBalanceado_Clase0[indexMuestraClase0,] #(numClase0,numClase1*2)
ds_Train_base <- rbind(ds_Train_NoBalanceado_Clase1,ds_Train_NoBalanceado_Clase0_bal)
set.seed(1234) # 1234  3456
trainIndex <- createDataPartition(data[,c(target)], p = proporcionTrainTest, list = FALSE, times = 1)
ds_Test  <- data[-trainIndex,]
ds_Train_NoBalanceado <- data[trainIndex,]
rm(list = ls())
library(dplyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(scorecard)
library(ROCR)
library(Metrics)
library(hmeasure)
library(woeBinning)
setwd('D://BGA//Score interno Tarjetas')
options(scipen=999)
#### Carga de datos ####
data <- read.csv("TarjetaVistaMinable_36meses90dias_Iteracion_4.csv", sep = ";", dec = ".", stringsAsFactors = FALSE)
colFactor <- c("ESTADO_CIVIL","NIVEL_EDUCACION","CARGO","TIPO_VIVIENDA","GENERO","SECTOR_ECONOMICO","COD_PROFESION","DEPARTAMENTO","NIVEL_INGRESO","FORMA_PAGO","DEFAULT")
data <- data %>% mutate( NIVEL_INGRESO = ifelse( NIVEL_INGRESO == "", "NO INDICADO", NIVEL_INGRESO  ) )
data[colFactor] <- lapply(data[colFactor], factor)
# data %>% select( NIVEL_INGRESO ) %>% distinct()
# str(data) # nrow(data)
#### DivisiÃ³n del conjunto de datos en Train y Test ####
# ParÃ¡metros
target <- "DEFAULT"
clasePositiva <- 1
numBalanceNegPos <- 4 # 4
proporcionTrainTest <- 0.83 # 0.8 0.83
rm(list = ls())
library(dplyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(scorecard)
library(ROCR)
library(Metrics)
library(hmeasure)
library(woeBinning)
setwd('D://BGA//Score interno Tarjetas')
options(scipen=999)
rm(list = ls())
library(dplyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(scorecard)
library(ROCR)
library(Metrics)
library(hmeasure)
library(woeBinning)
setwd('D://DatosBGA//ScoreAdmisionTarjetas//05-Modelado')
options(scipen=999)
data <- read.csv("C://DatosBGA//ScoreAdmisionTarjetas//04-PreparacionDatos//TarjetaVistaMinable_36meses90dias_Iteracion_4.csv", sep = ";", dec = ".", stringsAsFactors = FALSE)
colFactor <- c("ESTADO_CIVIL","NIVEL_EDUCACION","CARGO","TIPO_VIVIENDA","GENERO","SECTOR_ECONOMICO","COD_PROFESION","DEPARTAMENTO","NIVEL_INGRESO","FORMA_PAGO","DEFAULT")
data <- data %>% mutate( NIVEL_INGRESO = ifelse( NIVEL_INGRESO == "", "NO INDICADO", NIVEL_INGRESO  ) )
data[colFactor] <- lapply(data[colFactor], factor)
data <- read.csv("D://DatosBGA//ScoreAdmisionTarjetas//04-PreparacionDatos//TarjetaVistaMinable_36meses90dias_Iteracion_4.csv", sep = ";", dec = ".", stringsAsFactors = FALSE)
colFactor <- c("ESTADO_CIVIL","NIVEL_EDUCACION","CARGO","TIPO_VIVIENDA","GENERO","SECTOR_ECONOMICO","COD_PROFESION","DEPARTAMENTO","NIVEL_INGRESO","FORMA_PAGO","DEFAULT")
data <- data %>% mutate( NIVEL_INGRESO = ifelse( NIVEL_INGRESO == "", "NO INDICADO", NIVEL_INGRESO  ) )
data[colFactor] <- lapply(data[colFactor], factor)
target <- "DEFAULT"
clasePositiva <- 1
numBalanceNegPos <- 4 # 4
proporcionTrainTest <- 0.83 # 0.8 0.83
set.seed(1234) # 1234  3456
trainIndex <- createDataPartition(data[,c(target)], p = proporcionTrainTest, list = FALSE, times = 1)
ds_Test  <- data[-trainIndex,]
ds_Train_NoBalanceado <- data[trainIndex,]
ds_Train_NoBalanceado_Clase0 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 0,]
ds_Train_NoBalanceado_Clase1 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 1,]
numClase0 <- nrow(ds_Train_NoBalanceado_Clase0)
numClase1 <- nrow(ds_Train_NoBalanceado_Clase1)
set.seed(3456)
indexMuestraClase0 <- sample(numClase0, ifelse(numClase1*numBalanceNegPos < numClase0, numClase1*numBalanceNegPos , numClase0 ) )
ds_Train_NoBalanceado_Clase0_bal <- ds_Train_NoBalanceado_Clase0[indexMuestraClase0,] #(numClase0,numClase1*2)
ds_Train_base <- rbind(ds_Train_NoBalanceado_Clase1,ds_Train_NoBalanceado_Clase0_bal)
CODPRO_TestNoTrain0 <- as.character((ds_Test %>% filter( DEFAULT == "0" ) %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION)
CODPRO_Train4Change0 <- as.character( (ds_Train_base %>% filter( DEFAULT == "0" ) %>% group_by(COD_PROFESION) %>% summarise( numOps = n() ) %>% arrange( desc(numOps),COD_PROFESION ) %>% head(length(CODPRO_TestNoTrain0)))$COD_PROFESION )
idxTrainChange <- c()
for( CP_train in CODPRO_Train4Change0 ){
for (i in 1:nrow(ds_Train_base)) {
if( as.character(ds_Train_base[i,c("DEFAULT")]) == "0" & as.character(ds_Train_base[i,c("COD_PROFESION")]) == CP_train ){
idxTrainChange <- c(idxTrainChange,i); break;
}
}
}
idxTestChange <- c()
for( CP_test in CODPRO_TestNoTrain0 ){
for (i in 1:nrow(ds_Test)) {
if( as.character(ds_Test[i,c("DEFAULT")]) == "0" & as.character(ds_Test[i,c("COD_PROFESION")]) == CP_test ){
idxTestChange <- c(idxTestChange,i); break;
}
}
}
ds_Train_base <- rbind(ds_Train_base,ds_Test[idxTestChange,])
ds_Test <- rbind(ds_Test,ds_Train_base[idxTrainChange,])
ds_Train_base <- ds_Train_base[!(1:nrow(ds_Train_base)) %in% idxTrainChange,]
ds_Test <- ds_Test[!(1:nrow(ds_Test)) %in% idxTestChange,]
CODPRO_TestNoTrain1 <- as.character((ds_Test %>% filter( DEFAULT == "1" & (!COD_PROFESION %in% c(CODPRO_Train4Change0,CODPRO_TestNoTrain0)) ) %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION) # c(, CODPRO_Train4Change0,CODPRO_TestNoTrain0)
CODPRO_Train4Change1 <- as.character( (ds_Train_base %>% filter( DEFAULT == "1" & (!COD_PROFESION %in% c(CODPRO_Train4Change0,CODPRO_TestNoTrain0)) ) %>% group_by(COD_PROFESION) %>% summarise( numOps = n() ) %>% arrange( desc(numOps),COD_PROFESION ) %>% head(length(CODPRO_TestNoTrain1)))$COD_PROFESION )
# ds_Train_base  %>% filter( is.na(COD_PROFESION) )
idxTrainChange <- c()
for( CP_train in CODPRO_Train4Change1 ){
for (i in 1:nrow(ds_Train_base)) {
if( as.character(ds_Train_base[i,c("DEFAULT")]) == "1" & as.character(ds_Train_base[i,c("COD_PROFESION")]) == CP_train ){
idxTrainChange <- c(idxTrainChange,i); break
}
}
}
idxTestChange <- c()
for( CP_test in CODPRO_TestNoTrain1 ){
for (i in 1:nrow(ds_Test)) {
if( as.character(ds_Test[i,c("DEFAULT")]) == "1" & as.character(ds_Test[i,c("COD_PROFESION")]) == CP_test ){
idxTestChange <- c(idxTestChange,i); break
}
}
}
ds_Train_base <- rbind(ds_Train_base,ds_Test[idxTestChange,])
ds_Test <- rbind(ds_Test,ds_Train_base[idxTrainChange,])
ds_Train_base <- ds_Train_base[!(1:nrow(ds_Train_base)) %in% idxTrainChange,]
ds_Test <- ds_Test[!(1:nrow(ds_Test)) %in% idxTestChange,]
breaks_list = list(
DEPARTAMENTO = c("SANTA CRUZ%,%ORURO%,%BENI", "LA PAZ", "CHUQUISACA%,%COCHABAMBA%,%PANDO%,%TARIJA")
, COD_PROFESION = c("358%,%500%,%200%,%529%,%304%,%505%,%180%,%460%,%351%,%463%,%380%,%425%,%526%,%391%,%459%,%484%,%440%,%415%,%347%,%411%,%0%,%313%,%15%,%20%,%25%,%398%,%35%,%40%,%45%,%62%,%480%,%416%,%393%,%346%,%78%,%130%,%371%,%418%,%397%,%370%,%412%,%502","90%,%30%,%94%,%352%,%60%,%10%,%70%,%91%,%61%,%93%,%92","321%,%50%,%170%,%324%,%95%,%319%,%140%,%72%,%300%,%301%,%100%,%305%,%307%,%240%,%85%,%250%,%33%,%323%,%316%,%73%,%328%,%71%,%343%,%353%,%82%,%356%,%81%,%325%,%327%,%120%,%357%,%366%,%150%,%310%,%364%,%220%,%372%,%373%,%374%,%376%,%379%,%110%,%303%,%383%,%384%,%308%,%309%,%190%,%80%,%314%,%394%,%318%,%322%,%400%,%404%,%405%,%406%,%340%,%409%,%344%,%390%,%210%,%348%,%417%,%355%,%419%,%420%,%101%,%361%,%362%,%435%,%436%,%368%,%369%,%441%,%444%,%445%,%446%,%447%,%449%,%450%,%302%,%381%,%455%,%456%,%387%,%388%,%461%,%1%,%465%,%468%,%469%,%472%,%474%,%475%,%476%,%479%,%408%,%481%,%483%,%77%,%485%,%486%,%489%,%490%,%492%,%498%,%499%,%430%,%432%,%503%,%504%,%438%,%507%,%508%,%510%,%511%,%516%,%519%,%520%,%521%,%451%,%454")
# , COD_PROFESION = c("0%,%15%,%20%,%25%,%35%,%40%,%45%,%62%,%78%,%130%,%180%,%313%,%346%,%347%,%351%,%358%,%370%,%371%,%380%,%391%,%393%,%397%,%398%,%411%,%412%,%415%,%416%,%418%,%425%,%440%,%459%,%460%,%463%,%480%,%484%,%500%,%502%,%505%,%526%,%529", "200%,%304","1%,%10%,%30%,%33%,%50%,%60%,%61%,%70%,%71%,%72%,%73%,%77%,%80%,%81%,%82%,%85%,%90%,%91%,%92%,%93%,%94%,%95%,%100%,%101%,%110%,%120%,%140%,%150%,%170%,%190%,%210%,%220%,%240%,%250%,%300%,%301%,%302%,%303%,%305%,%307%,%308%,%309%,%310%,%314%,%316%,%318%,%319%,%321%,%322%,%323%,%324%,%325%,%327%,%328%,%340%,%343%,%344%,%348%,%352%,%353%,%355%,%356%,%357%,%361%,%362%,%364%,%366%,%368%,%369%,%372%,%373%,%374%,%376%,%379%,%381%,%383%,%384%,%387%,%388%,%390%,%394%,%400%,%404%,%405%,%406%,%408%,%409%,%417%,%419%,%420%,%430%,%432%,%435%,%436%,%438%,%441%,%444%,%445%,%446%,%447%,%449%,%450%,%451%,%454%,%455%,%456%,%461%,%465%,%468%,%469%,%472%,%474%,%475%,%476%,%479%,%481%,%483%,%485%,%486%,%489%,%490%,%492%,%498%,%499%,%503%,%504%,%507%,%508%,%510%,%511%,%516%,%519%,%520%,%521")
, ESTADO_CIVIL = c("3%,%5","2%,%4","1")
, TOT_PASIVOS = c(0.01)
, NIVEL_INGRESO = c("MENOS DE $600%,%MÃS DE $5000","$2001 - $5000%,%$600 - $1200%,%NO INDICADO","$1201 - $2000")
, MONTO_OPERACION = c(6000,7000,10000)
, EDAD = c(28,39,41,56)
# , INGRESOS_GASTOS = c(1.2,1.5,2.8,3.3,5.5)
# , EDAD = c(27,31,40)
# , PASIVO_ACTIVO = c(0.01)
# , NIVEL_EDUCACION = c("1%,%3%,%4%,%5%,%6","7","2")
# , ANTIGUEDAD_LABORAL = c(3)
# , CARGO = c("1%,%2%,%5%,%7%,%9%,%12","4%,%6%,%8%,%11","3")
# , TOT_ACTIVOS = c(8000)
# , INGRESOS_GASTOS = c(1.5,2.8,4)
# , MONTO_OPERACION = c(5000,7000)
)
bins = woebin( ds_Train_base, "DEFAULT", breaks_list = breaks_list, positive = "1", var_skip = c("OPERACION","FECHA_INICIO","SALDO")) # bin_num_limit = 10
resIVcols <- data.frame()
for (col in colnames(ds_Train_base)[!colnames(ds_Train_base) %in% c("DEFAULT","OPERACION","FECHA_INICIO","SALDO","SECTOR_ECONOMICO","FORMA_PAGO")]) {
# print( col )
if( nrow(resIVcols) == 0 ) {
resIVcols <- data.frame( columna = col, IV = bins[[col]][1,c("total_iv")] )
} else {
resIVcols <- rbind(resIVcols, data.frame( columna = col, IV = bins[[col]][1,c("total_iv")] ))
}
}
(resIVcols %>% arrange( desc(total_iv) ))
bins = woebin( ds_Train_base, "DEFAULT", breaks_list = breaks_list, positive = "1", var_skip = c("OPERACION","FECHA_INICIO","SALDO")) # bin_num_limit = 10
bins
ds_Train_base
rm(list = ls())
library(dplyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(scorecard)
library(ROCR)
library(Metrics)
library(hmeasure)
library(woeBinning)
setwd('D://DatosBGA//ScoreAdmisionTarjetas//05-Modelado')
options(scipen=999)
#### Carga de datos ####
data <- read.csv("D://DatosBGA//ScoreAdmisionTarjetas//04-PreparacionDatos//TarjetaVistaMinable_36meses90dias_Iteracion_4.csv", sep = ";", dec = ".", stringsAsFactors = FALSE)
colFactor <- c("ESTADO_CIVIL","NIVEL_EDUCACION","CARGO","TIPO_VIVIENDA","GENERO","SECTOR_ECONOMICO","COD_PROFESION","DEPARTAMENTO","NIVEL_INGRESO","FORMA_PAGO","DEFAULT")
data <- data %>% mutate( NIVEL_INGRESO = ifelse( NIVEL_INGRESO == "", "NO INDICADO", NIVEL_INGRESO  ) )
data[colFactor] <- lapply(data[colFactor], factor)
# data %>% select( NIVEL_INGRESO ) %>% distinct()
# str(data) # nrow(data)
#### DivisiÃ³n del conjunto de datos en Train y Test ####
# ParÃ¡metros
target <- "DEFAULT"
clasePositiva <- 1
numBalanceNegPos <- 4 # 4
proporcionTrainTest <- 0.83 # 0.8 0.83
# DivisiÃ³n del conjunto de datos
# c(nrow(data),table(data$DEFAULT))
# table(data$DEFAULT)["0"]/table(data$DEFAULT)["1"]
set.seed(1234) # 1234  3456
trainIndex <- createDataPartition(data[,c(target)], p = proporcionTrainTest, list = FALSE, times = 1)
ds_Test  <- data[-trainIndex,]
ds_Train_NoBalanceado <- data[trainIndex,]
# ds_Test %>% group_by( DEFAULT ) %>% summarise( n() )
# ds_Train_NoBalanceado %>% group_by( DEFAULT ) %>% summarise( n() )
# nrow(ds_Test)
#### Equilibrio de clases en datos de entrenamiento ####
ds_Train_NoBalanceado_Clase0 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 0,]
ds_Train_NoBalanceado_Clase1 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 1,]
numClase0 <- nrow(ds_Train_NoBalanceado_Clase0)
numClase1 <- nrow(ds_Train_NoBalanceado_Clase1)
set.seed(3456)
indexMuestraClase0 <- sample(numClase0, ifelse(numClase1*numBalanceNegPos < numClase0, numClase1*numBalanceNegPos , numClase0 ) )
ds_Train_NoBalanceado_Clase0_bal <- ds_Train_NoBalanceado_Clase0[indexMuestraClase0,] #(numClase0,numClase1*2)
ds_Train_base <- rbind(ds_Train_NoBalanceado_Clase1,ds_Train_NoBalanceado_Clase0_bal)
#### Intercambio equilibrado de COD_PROFESION (VIGENTES) ####
CODPRO_TestNoTrain0 <- as.character((ds_Test %>% filter( DEFAULT == "0" ) %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION)
CODPRO_Train4Change0 <- as.character( (ds_Train_base %>% filter( DEFAULT == "0" ) %>% group_by(COD_PROFESION) %>% summarise( numOps = n() ) %>% arrange( desc(numOps),COD_PROFESION ) %>% head(length(CODPRO_TestNoTrain0)))$COD_PROFESION )
idxTrainChange <- c()
for( CP_train in CODPRO_Train4Change0 ){
for (i in 1:nrow(ds_Train_base)) {
if( as.character(ds_Train_base[i,c("DEFAULT")]) == "0" & as.character(ds_Train_base[i,c("COD_PROFESION")]) == CP_train ){
idxTrainChange <- c(idxTrainChange,i); break;
}
}
}
idxTestChange <- c()
for( CP_test in CODPRO_TestNoTrain0 ){
for (i in 1:nrow(ds_Test)) {
if( as.character(ds_Test[i,c("DEFAULT")]) == "0" & as.character(ds_Test[i,c("COD_PROFESION")]) == CP_test ){
idxTestChange <- c(idxTestChange,i); break;
}
}
}
ds_Train_base <- rbind(ds_Train_base,ds_Test[idxTestChange,])
ds_Test <- rbind(ds_Test,ds_Train_base[idxTrainChange,])
ds_Train_base <- ds_Train_base[!(1:nrow(ds_Train_base)) %in% idxTrainChange,]
ds_Test <- ds_Test[!(1:nrow(ds_Test)) %in% idxTestChange,]
CODPRO_TestNoTrain1 <- as.character((ds_Test %>% filter( DEFAULT == "1" & (!COD_PROFESION %in% c(CODPRO_Train4Change0,CODPRO_TestNoTrain0)) ) %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION) # c(, CODPRO_Train4Change0,CODPRO_TestNoTrain0)
CODPRO_Train4Change1 <- as.character( (ds_Train_base %>% filter( DEFAULT == "1" & (!COD_PROFESION %in% c(CODPRO_Train4Change0,CODPRO_TestNoTrain0)) ) %>% group_by(COD_PROFESION) %>% summarise( numOps = n() ) %>% arrange( desc(numOps),COD_PROFESION ) %>% head(length(CODPRO_TestNoTrain1)))$COD_PROFESION )
# ds_Train_base  %>% filter( is.na(COD_PROFESION) )
idxTrainChange <- c()
for( CP_train in CODPRO_Train4Change1 ){
for (i in 1:nrow(ds_Train_base)) {
if( as.character(ds_Train_base[i,c("DEFAULT")]) == "1" & as.character(ds_Train_base[i,c("COD_PROFESION")]) == CP_train ){
idxTrainChange <- c(idxTrainChange,i); break
}
}
}
idxTestChange <- c()
for( CP_test in CODPRO_TestNoTrain1 ){
for (i in 1:nrow(ds_Test)) {
if( as.character(ds_Test[i,c("DEFAULT")]) == "1" & as.character(ds_Test[i,c("COD_PROFESION")]) == CP_test ){
idxTestChange <- c(idxTestChange,i); break
}
}
}
ds_Train_base <- rbind(ds_Train_base,ds_Test[idxTestChange,])
ds_Test <- rbind(ds_Test,ds_Train_base[idxTrainChange,])
ds_Train_base <- ds_Train_base[!(1:nrow(ds_Train_base)) %in% idxTrainChange,]
ds_Test <- ds_Test[!(1:nrow(ds_Test)) %in% idxTestChange,]
# as.character((ds_Test %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION)
# nrow(ds_Train_base) + nrow(ds_Test)
# rbind( (ds_Train_base %>% select(OPERACION)) , (ds_Test %>% select(OPERACION)) ) %>% select(OPERACION) %>% distinct() %>% nrow()
# table(ds_Train_base$DEFAULT)
# table(ds_Test$DEFAULT)
breaks_list = list(
DEPARTAMENTO = c("SANTA CRUZ%,%ORURO%,%BENI", "LA PAZ", "CHUQUISACA%,%COCHABAMBA%,%PANDO%,%TARIJA")
, COD_PROFESION = c("358%,%500%,%200%,%529%,%304%,%505%,%180%,%460%,%351%,%463%,%380%,%425%,%526%,%391%,%459%,%484%,%440%,%415%,%347%,%411%,%0%,%313%,%15%,%20%,%25%,%398%,%35%,%40%,%45%,%62%,%480%,%416%,%393%,%346%,%78%,%130%,%371%,%418%,%397%,%370%,%412%,%502","90%,%30%,%94%,%352%,%60%,%10%,%70%,%91%,%61%,%93%,%92","321%,%50%,%170%,%324%,%95%,%319%,%140%,%72%,%300%,%301%,%100%,%305%,%307%,%240%,%85%,%250%,%33%,%323%,%316%,%73%,%328%,%71%,%343%,%353%,%82%,%356%,%81%,%325%,%327%,%120%,%357%,%366%,%150%,%310%,%364%,%220%,%372%,%373%,%374%,%376%,%379%,%110%,%303%,%383%,%384%,%308%,%309%,%190%,%80%,%314%,%394%,%318%,%322%,%400%,%404%,%405%,%406%,%340%,%409%,%344%,%390%,%210%,%348%,%417%,%355%,%419%,%420%,%101%,%361%,%362%,%435%,%436%,%368%,%369%,%441%,%444%,%445%,%446%,%447%,%449%,%450%,%302%,%381%,%455%,%456%,%387%,%388%,%461%,%1%,%465%,%468%,%469%,%472%,%474%,%475%,%476%,%479%,%408%,%481%,%483%,%77%,%485%,%486%,%489%,%490%,%492%,%498%,%499%,%430%,%432%,%503%,%504%,%438%,%507%,%508%,%510%,%511%,%516%,%519%,%520%,%521%,%451%,%454")
# , COD_PROFESION = c("0%,%15%,%20%,%25%,%35%,%40%,%45%,%62%,%78%,%130%,%180%,%313%,%346%,%347%,%351%,%358%,%370%,%371%,%380%,%391%,%393%,%397%,%398%,%411%,%412%,%415%,%416%,%418%,%425%,%440%,%459%,%460%,%463%,%480%,%484%,%500%,%502%,%505%,%526%,%529", "200%,%304","1%,%10%,%30%,%33%,%50%,%60%,%61%,%70%,%71%,%72%,%73%,%77%,%80%,%81%,%82%,%85%,%90%,%91%,%92%,%93%,%94%,%95%,%100%,%101%,%110%,%120%,%140%,%150%,%170%,%190%,%210%,%220%,%240%,%250%,%300%,%301%,%302%,%303%,%305%,%307%,%308%,%309%,%310%,%314%,%316%,%318%,%319%,%321%,%322%,%323%,%324%,%325%,%327%,%328%,%340%,%343%,%344%,%348%,%352%,%353%,%355%,%356%,%357%,%361%,%362%,%364%,%366%,%368%,%369%,%372%,%373%,%374%,%376%,%379%,%381%,%383%,%384%,%387%,%388%,%390%,%394%,%400%,%404%,%405%,%406%,%408%,%409%,%417%,%419%,%420%,%430%,%432%,%435%,%436%,%438%,%441%,%444%,%445%,%446%,%447%,%449%,%450%,%451%,%454%,%455%,%456%,%461%,%465%,%468%,%469%,%472%,%474%,%475%,%476%,%479%,%481%,%483%,%485%,%486%,%489%,%490%,%492%,%498%,%499%,%503%,%504%,%507%,%508%,%510%,%511%,%516%,%519%,%520%,%521")
, ESTADO_CIVIL = c("3%,%5","2%,%4","1")
, TOT_PASIVOS = c(0.01)
, NIVEL_INGRESO = c("MENOS DE $600%,%MÃS DE $5000","$2001 - $5000%,%$600 - $1200%,%NO INDICADO","$1201 - $2000")
, MONTO_OPERACION = c(6000,7000,10000)
, EDAD = c(28,39,41,56)
# , INGRESOS_GASTOS = c(1.2,1.5,2.8,3.3,5.5)
# , EDAD = c(27,31,40)
# , PASIVO_ACTIVO = c(0.01)
# , NIVEL_EDUCACION = c("1%,%3%,%4%,%5%,%6","7","2")
# , ANTIGUEDAD_LABORAL = c(3)
# , CARGO = c("1%,%2%,%5%,%7%,%9%,%12","4%,%6%,%8%,%11","3")
# , TOT_ACTIVOS = c(8000)
# , INGRESOS_GASTOS = c(1.5,2.8,4)
# , MONTO_OPERACION = c(5000,7000)
)
bins = woebin( ds_Train_base, "DEFAULT", breaks_list = breaks_list, positive = "1", var_skip = c("OPERACION","FECHA_INICIO","SALDO")) # bin_num_limit = 10
bins = woebin( ds_Train_base %>% select(-c(SECTOR_ECONOMICO)), "DEFAULT", breaks_list = breaks_list, positive = "1", var_skip = c("OPERACION","FECHA_INICIO","SALDO")) # bin_num_limit = 10
bins
bins = woebin( ds_Train_base, "DEFAULT", breaks_list = breaks_list, positive = "1", var_skip = c("OPERACION","FECHA_INICIO","SALDO","SECTOR_ECONOMICO")) # bin_num_limit = 10
bins
rm(list = ls())
library(dplyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(scorecard)
library(ROCR)
library(Metrics)
library(hmeasure)
library(woeBinning)
setwd('D://DatosBGA//ScoreAdmisionTarjetas//05-Modelado')
options(scipen=999)
data <- read.csv("D://DatosBGA//ScoreAdmisionTarjetas//04-PreparacionDatos//TarjetaVistaMinable_36meses90dias_Iteracion_4.csv", sep = ";", dec = ".", stringsAsFactors = FALSE)
colFactor <- c("ESTADO_CIVIL","NIVEL_EDUCACION","CARGO","TIPO_VIVIENDA","GENERO","SECTOR_ECONOMICO","COD_PROFESION","DEPARTAMENTO","NIVEL_INGRESO","FORMA_PAGO","DEFAULT")
data <- data %>% mutate( NIVEL_INGRESO = ifelse( NIVEL_INGRESO == "", "NO INDICADO", NIVEL_INGRESO  ) )
data[colFactor] <- lapply(data[colFactor], factor)
target <- "DEFAULT"
clasePositiva <- 1
target <- "DEFAULT"
clasePositiva <- 1
numBalanceNegPos <- 4 # 4
proporcionTrainTest <- 0.83 # 0.8 0.83
set.seed(1234) # 1234  3456
trainIndex <- createDataPartition(data[,c(target)], p = proporcionTrainTest, list = FALSE, times = 1)
ds_Test  <- data[-trainIndex,]
ds_Train_NoBalanceado <- data[trainIndex,]
ds_Train_NoBalanceado_Clase0 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 0,]
ds_Train_NoBalanceado_Clase1 <- ds_Train_NoBalanceado[ds_Train_NoBalanceado[,c(target)] == 1,]
numClase0 <- nrow(ds_Train_NoBalanceado_Clase0)
numClase1 <- nrow(ds_Train_NoBalanceado_Clase1)
set.seed(3456)
indexMuestraClase0 <- sample(numClase0, ifelse(numClase1*numBalanceNegPos < numClase0, numClase1*numBalanceNegPos , numClase0 ) )
ds_Train_NoBalanceado_Clase0_bal <- ds_Train_NoBalanceado_Clase0[indexMuestraClase0,] #(numClase0,numClase1*2)
ds_Train_base <- rbind(ds_Train_NoBalanceado_Clase1,ds_Train_NoBalanceado_Clase0_bal)
CODPRO_TestNoTrain0 <- as.character((ds_Test %>% filter( DEFAULT == "0" ) %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION)
CODPRO_Train4Change0 <- as.character( (ds_Train_base %>% filter( DEFAULT == "0" ) %>% group_by(COD_PROFESION) %>% summarise( numOps = n() ) %>% arrange( desc(numOps),COD_PROFESION ) %>% head(length(CODPRO_TestNoTrain0)))$COD_PROFESION )
idxTrainChange <- c()
for( CP_train in CODPRO_Train4Change0 ){
for (i in 1:nrow(ds_Train_base)) {
if( as.character(ds_Train_base[i,c("DEFAULT")]) == "0" & as.character(ds_Train_base[i,c("COD_PROFESION")]) == CP_train ){
idxTrainChange <- c(idxTrainChange,i); break;
}
}
}
idxTestChange <- c()
for( CP_test in CODPRO_TestNoTrain0 ){
for (i in 1:nrow(ds_Test)) {
if( as.character(ds_Test[i,c("DEFAULT")]) == "0" & as.character(ds_Test[i,c("COD_PROFESION")]) == CP_test ){
idxTestChange <- c(idxTestChange,i); break;
}
}
}
ds_Train_base <- rbind(ds_Train_base,ds_Test[idxTestChange,])
ds_Test <- rbind(ds_Test,ds_Train_base[idxTrainChange,])
ds_Train_base <- ds_Train_base[!(1:nrow(ds_Train_base)) %in% idxTrainChange,]
ds_Test <- ds_Test[!(1:nrow(ds_Test)) %in% idxTestChange,]
CODPRO_TestNoTrain1 <- as.character((ds_Test %>% filter( DEFAULT == "1" & (!COD_PROFESION %in% c(CODPRO_Train4Change0,CODPRO_TestNoTrain0)) ) %>% select(COD_PROFESION) %>% distinct() %>% filter( !COD_PROFESION %in% ds_Train_base$COD_PROFESION ))$COD_PROFESION) # c(, CODPRO_Train4Change0,CODPRO_TestNoTrain0)
CODPRO_Train4Change1 <- as.character( (ds_Train_base %>% filter( DEFAULT == "1" & (!COD_PROFESION %in% c(CODPRO_Train4Change0,CODPRO_TestNoTrain0)) ) %>% group_by(COD_PROFESION) %>% summarise( numOps = n() ) %>% arrange( desc(numOps),COD_PROFESION ) %>% head(length(CODPRO_TestNoTrain1)))$COD_PROFESION )
# ds_Train_base  %>% filter( is.na(COD_PROFESION) )
idxTrainChange <- c()
for( CP_train in CODPRO_Train4Change1 ){
for (i in 1:nrow(ds_Train_base)) {
if( as.character(ds_Train_base[i,c("DEFAULT")]) == "1" & as.character(ds_Train_base[i,c("COD_PROFESION")]) == CP_train ){
idxTrainChange <- c(idxTrainChange,i); break
}
}
}
idxTestChange <- c()
for( CP_test in CODPRO_TestNoTrain1 ){
for (i in 1:nrow(ds_Test)) {
if( as.character(ds_Test[i,c("DEFAULT")]) == "1" & as.character(ds_Test[i,c("COD_PROFESION")]) == CP_test ){
idxTestChange <- c(idxTestChange,i); break
}
}
}
ds_Train_base <- rbind(ds_Train_base,ds_Test[idxTestChange,])
ds_Test <- rbind(ds_Test,ds_Train_base[idxTrainChange,])
ds_Train_base <- ds_Train_base[!(1:nrow(ds_Train_base)) %in% idxTrainChange,]
ds_Test <- ds_Test[!(1:nrow(ds_Test)) %in% idxTestChange,]
breaks_list = list(
DEPARTAMENTO = c("SANTA CRUZ%,%ORURO%,%BENI", "LA PAZ", "CHUQUISACA%,%COCHABAMBA%,%PANDO%,%TARIJA")
, COD_PROFESION = c("358%,%500%,%200%,%529%,%304%,%505%,%180%,%460%,%351%,%463%,%380%,%425%,%526%,%391%,%459%,%484%,%440%,%415%,%347%,%411%,%0%,%313%,%15%,%20%,%25%,%398%,%35%,%40%,%45%,%62%,%480%,%416%,%393%,%346%,%78%,%130%,%371%,%418%,%397%,%370%,%412%,%502","90%,%30%,%94%,%352%,%60%,%10%,%70%,%91%,%61%,%93%,%92","321%,%50%,%170%,%324%,%95%,%319%,%140%,%72%,%300%,%301%,%100%,%305%,%307%,%240%,%85%,%250%,%33%,%323%,%316%,%73%,%328%,%71%,%343%,%353%,%82%,%356%,%81%,%325%,%327%,%120%,%357%,%366%,%150%,%310%,%364%,%220%,%372%,%373%,%374%,%376%,%379%,%110%,%303%,%383%,%384%,%308%,%309%,%190%,%80%,%314%,%394%,%318%,%322%,%400%,%404%,%405%,%406%,%340%,%409%,%344%,%390%,%210%,%348%,%417%,%355%,%419%,%420%,%101%,%361%,%362%,%435%,%436%,%368%,%369%,%441%,%444%,%445%,%446%,%447%,%449%,%450%,%302%,%381%,%455%,%456%,%387%,%388%,%461%,%1%,%465%,%468%,%469%,%472%,%474%,%475%,%476%,%479%,%408%,%481%,%483%,%77%,%485%,%486%,%489%,%490%,%492%,%498%,%499%,%430%,%432%,%503%,%504%,%438%,%507%,%508%,%510%,%511%,%516%,%519%,%520%,%521%,%451%,%454")
# , COD_PROFESION = c("0%,%15%,%20%,%25%,%35%,%40%,%45%,%62%,%78%,%130%,%180%,%313%,%346%,%347%,%351%,%358%,%370%,%371%,%380%,%391%,%393%,%397%,%398%,%411%,%412%,%415%,%416%,%418%,%425%,%440%,%459%,%460%,%463%,%480%,%484%,%500%,%502%,%505%,%526%,%529", "200%,%304","1%,%10%,%30%,%33%,%50%,%60%,%61%,%70%,%71%,%72%,%73%,%77%,%80%,%81%,%82%,%85%,%90%,%91%,%92%,%93%,%94%,%95%,%100%,%101%,%110%,%120%,%140%,%150%,%170%,%190%,%210%,%220%,%240%,%250%,%300%,%301%,%302%,%303%,%305%,%307%,%308%,%309%,%310%,%314%,%316%,%318%,%319%,%321%,%322%,%323%,%324%,%325%,%327%,%328%,%340%,%343%,%344%,%348%,%352%,%353%,%355%,%356%,%357%,%361%,%362%,%364%,%366%,%368%,%369%,%372%,%373%,%374%,%376%,%379%,%381%,%383%,%384%,%387%,%388%,%390%,%394%,%400%,%404%,%405%,%406%,%408%,%409%,%417%,%419%,%420%,%430%,%432%,%435%,%436%,%438%,%441%,%444%,%445%,%446%,%447%,%449%,%450%,%451%,%454%,%455%,%456%,%461%,%465%,%468%,%469%,%472%,%474%,%475%,%476%,%479%,%481%,%483%,%485%,%486%,%489%,%490%,%492%,%498%,%499%,%503%,%504%,%507%,%508%,%510%,%511%,%516%,%519%,%520%,%521")
, ESTADO_CIVIL = c("3%,%5","2%,%4","1")
, TOT_PASIVOS = c(0.01)
, NIVEL_INGRESO = c("MENOS DE $600%,%MÃS DE $5000","$2001 - $5000%,%$600 - $1200%,%NO INDICADO","$1201 - $2000")
, MONTO_OPERACION = c(6000,7000,10000)
, EDAD = c(28,39,41,56)
# , INGRESOS_GASTOS = c(1.2,1.5,2.8,3.3,5.5)
# , EDAD = c(27,31,40)
# , PASIVO_ACTIVO = c(0.01)
# , NIVEL_EDUCACION = c("1%,%3%,%4%,%5%,%6","7","2")
# , ANTIGUEDAD_LABORAL = c(3)
# , CARGO = c("1%,%2%,%5%,%7%,%9%,%12","4%,%6%,%8%,%11","3")
# , TOT_ACTIVOS = c(8000)
# , INGRESOS_GASTOS = c(1.5,2.8,4)
# , MONTO_OPERACION = c(5000,7000)
)
bins = woebin( ds_Train_base, "DEFAULT", breaks_list = breaks_list, positive = "1", var_skip = c("OPERACION","FECHA_INICIO","SALDO","SECTOR_ECONOMICO")) # bin_num_limit = 10
version()
version
RNGkind()
